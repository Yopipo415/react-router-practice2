{"version":3,"sources":["components/Button/Button.jsx","components/Home/Home.jsx","data_fetchers/QuizFetcher.js","models/Quiz.js","components/Quiz/Quiz.jsx","App.js","index.js"],"names":["Button","props","onClickHandler","className","onClick","children","Home","history","push","QuizFetcher","axios","get","response","data","Quiz","question","correctAnswer","incorrectAnswers","this","_question","_correctAnswer","_incorrectAnswers","_","shuffle","answer","fetch","quizDataList","results","map","result","he","decode","correct_answer","incorrect_answers","str","quizData","state","quizzes","currentIndex","numberOfCorrects","restart","setState","QuizModel","fetchAndCreateQuizzes","quiz","judgeCorrectAnswer","alert","length","renderLoading","renderQuiz","renderResult","to","answers","shuffleAnswers","index","selectAnswer","id","React","Component","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.524916b3.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Button.css\";\n\nconst Button = (props) => {\n    let { onClickHandler } = props;\n\n    if ( typeof onClickHandler !== 'function' ) {\n        onClickHandler = () => {};\n    }\n\n    return (\n        <div\n            className=\"Button\" \n            onClick={ onClickHandler }\n        >\n            { props.children }\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport Button from \"../Button/Button\";\n\nconst Home = ({ history }) => {\n    return (\n        <div>\n            <h1>Welcome to the Quiz App!</h1>\n            <br/>\n            <br/>\n            <Button \n                onClickHandler={() => {\n                    history.push('/quiz');\n                }}\n            >\n                Let's start!!\n            </Button>\n        </div>\n    );\n};\n\nexport default Home;","import axios from \"axios\";\n\nconst API_URL = 'https://opentdb.com/api.php?amount=10&type=multiple';\n\nclass QuizFetcher {\n    static async fetch() {\n        const response = await axios.get(API_URL);\n        return response.data;\n    }\n}\n\nexport default QuizFetcher;","import _ from \"lodash\";\nimport he from \"he\";\nimport QuizFetcher from \"../data_fetchers/QuizFetcher\";\n\nclass Quiz {\n    constructor({ question, correctAnswer, incorrectAnswers }) {\n        this._question = question;\n        this._correctAnswer = correctAnswer;\n        this._incorrectAnswers = [...incorrectAnswers];\n    }\n\n    get question () {\n        return this._question;\n    }\n\n    get correctAnswer () {\n        return this._correctAnswer;\n    }\n\n    shuffleAnswers() {\n        return _.shuffle([\n            this._correctAnswer,\n            ...this._incorrectAnswers\n        ]);\n    }\n\n    judgeCorrectAnswer (answer) {\n        return answer === this._correctAnswer;\n    }\n\n    static async fetchAndCreateQuizzes () {\n        const quizDataList = await QuizFetcher.fetch();\n\n        return quizDataList.results.map((result) => {\n            return {\n                question: he.decode(result.question),\n                correctAnswer: he.decode(result.correct_answer),\n                incorrectAnswers: result.incorrect_answers.map(str => he.decode(str) )\n            };\n        })\n        .map((quizData) => {\n            return new Quiz(quizData);\n        })\n    }\n\n}\n\nexport default Quiz;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport QuizModel from '../../models/Quiz';\nimport Button from \"../Button/Button\";\nimport './Quiz.css';\n\nclass Quiz extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            quizzes : [],\n            currentIndex : 0,\n            numberOfCorrects : 0\n        };\n    }\n\n    async componentDidMount () {\n        await this.restart();\n    }\n\n    async restart () {\n        this.setState({\n            quizzes : [],\n            currentIndex : 0,\n            numberOfCorrects : 0\n        });\n\n        const quizzes = await QuizModel.fetchAndCreateQuizzes();\n\n        this.setState({ quizzes });\n\n    }\n\n    selectAnswer (quiz, answer) {\n        let { currentIndex, numberOfCorrects } = this.state;\n        const isCorrect = quiz.judgeCorrectAnswer(answer);\n\n        if (isCorrect) {\n            numberOfCorrects ++;\n            alert('Correct answer!!');\n        } else {\n            alert(`Wrong answer... (The correct answer is \"${quiz.correctAnswer}\")`);\n        }\n        currentIndex++;\n\n        this.setState({\n            currentIndex,\n            numberOfCorrects\n        });\n    }\n\n    render () {\n        const { quizzes, currentIndex } = this.state;\n\n        if (quizzes.length === 0) {\n            return this.renderLoading();\n        }\n\n        if (quizzes.length > 0 && currentIndex < quizzes.length) {\n            return this.renderQuiz();\n        }\n\n        if (quizzes.length > 0 && currentIndex >= quizzes.length) {\n            return this.renderResult();\n        }\n    }\n\n    renderLoading () {\n        return (\n            <div>\n                <h1>Please wait...</h1>\n                <p>Now loading...</p>\n                <hr/>\n                <Link to=\"/\">Back to the Top</Link>\n            </div>\n        );\n    }\n\n    renderQuiz () {\n        const { quizzes, currentIndex } = this.state;\n\n        const quiz = quizzes[currentIndex];\n        const answers = quiz.shuffleAnswers().map((answer,index) => {\n            return (\n                <li key={index}>\n                    <Button\n                        onClickHandler={() => { this.selectAnswer(quiz, answer) }}\n                    >\n                        {answer}\n                    </Button>\n                </li>\n            );\n        });\n\n        return (\n            <div>\n                <h1>Question : { currentIndex + 1 }</h1>\n                <div>\n                    <p>{quiz.question}</p>\n                    <ul className=\"QuizList\">{answers}</ul>\n                </div>\n                <hr/>\n                <Link to=\"/\">Back to the Top</Link>\n            </div>\n        );\n    }\n\n    renderResult () {\n        const { quizzes, numberOfCorrects } = this.state;\n\n        return (\n            <div>\n                <h1>Your result is...</h1>\n                <div>\n                    <p id=\"result\">{`${numberOfCorrects}/${quizzes.length} corrects.`}</p>\n                    <Button\n                        onClickHandler={() => {this.restart()}}\n                    >\n                        Restart?\n                    </Button>\n                </div>\n                <hr/>\n                <Link to=\"/\">Back to the Top</Link>\n            </div>\n        );\n    }\n\n}\n\nexport default Quiz;","import React from 'react';\nimport {  \n  HashRouter as Router, \n  Route\n} from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Quiz from \"./components/Quiz/Quiz\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/quiz\" exact component={Quiz} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}